* [-] void dyad_init(void);
* [-] void dyad_update(void);
* [-] void dyad_shutdown(void);
* [-] double dyad_getTime(void);
* [-] int  dyad_getStreamCount(void);
* [-] void dyad_setTickInterval(double seconds);
* [-] void dyad_setUpdateTimeout(double seconds);
* [-] dyad_PanicCallback dyad_atPanic(dyad_PanicCallback func);
* [-] dyad_Stream *dyad_newStream(void);
* [-] int dyad_listenEx(dyad_Stream *stream, const char *host, int port, int backlog);
* [-] int dyad_connect(dyad_Stream *stream, const char *host, int port);
* [~] void dyad_addListener(dyad_Stream *stream, int event, dyad_Callback callback, void *udata);
* [~] void dyad_removeListener(dyad_Stream *stream, int event, dyad_Callback callback, void *udata);
* [~] void dyad_removeAllListeners(dyad_Stream *stream, int event);
* [-] void dyad_end(dyad_Stream *stream);
* [-] void dyad_close(dyad_Stream *stream);
* [~] void dyad_write(dyad_Stream *stream, const void *data, int size);
* [-] void dyad_writef(dyad_Stream *stream, const char *fmt, ...);
* [-] void dyad_setTimeout(dyad_Stream *stream, double seconds);
* [-] void dyad_setNoDelay(dyad_Stream *stream, int opt);
* [-] int dyad_getState(dyad_Stream *stream);
* [-] const char *dyad_getAddress(dyad_Stream *stream);
* [-] int dyad_getPort(dyad_Stream *stream);
* [-] int dyad_getBytesSent(dyad_Stream *stream);
* [-] int dyad_getBytesReceived(dyad_Stream *stream);
